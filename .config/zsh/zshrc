# system-wide environment settings for zsh(1)
if [ -x /usr/libexec/path_helper ]; then
    eval `/usr/libexec/path_helper -s`
fi

# The following lines were added by compinstall
zstyle ':completion:*' completer _expand _complete _ignored _correct _approximate
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ':completion:*' menu select=long
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle :compinstall filename "$HOME/.zshrc"

autoload -Uz compinit
compinit

# Deleting up to the previous slash with ctrl-w
autoload -U select-word-style
select-word-style bash
# End of lines added by compinstall
# Lines configured by zsh-newuser-install
HISTFILE=~/.local/tmp/zsh_history
HISTSIZE=1000
SAVEHIST=1000

export CLICOLOR=1
export LSCOLORS=ExFxCxDxBxegedabagacad

unsetopt nomatch

test -e "$HOME/.config/zsh/zsh_keymaps" && source "$HOME/.config/zsh/zsh_keymaps"

export KEYTIMEOUT=1
bindkey -e

PROMPT='%(?.%F{magenta}.%F{red})${${KEYMAP/vicmd/❮%f}/(main|viins)/❯%f} '
function zle-line-init zle-keymap-select {
  zle reset-prompt
}
zle -N zle-line-init
zle -N zle-keymap-select

autoload -U select-word-style
select-word-style bash

# Enable direnv if it's available
if hash direnv 2> /dev/null; then
  eval "$(direnv hook zsh)"
fi

export SHELL=$(which zsh)

# .zshrc
autoload -U promptinit && promptinit
prompt pure


# Mac Keyboard - I hope it will work for most keyboards
bindkey    "^[[1~"          beginning-of-line
bindkey    "^[[3~"          delete-char
bindkey    "^[3;5~"         delete-char
bindkey    "^[[4~"          end-of-line
bindkey    "^[[5~"          up-line-or-search
bindkey    "^[[6~"          down-line-or-search
